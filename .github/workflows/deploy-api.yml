name: Deploy API to Cloudflare

on:
  workflow_run:
    workflows: ["Auto Release and Version Bump"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy API to Cloudflare
    runs-on: ubuntu-latest
    # Only deploy if the release workflow completed successfully
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Get latest release version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # For manual deployment, use the latest git tag
            VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "dev")
          else
            # For automatic deployment after release, get version from the release workflow
            VERSION=$(echo "${{ github.event.workflow_run.head_branch }}" | sed 's/.*\///g')
            if [ -z "$VERSION" ] || [ "$VERSION" == "main" ]; then
              VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "dev")
            fi
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Deploying version: $VERSION"

      - name: Build API JAR
        run: ./gradlew :api:shadowJar -PappVersion=${{ steps.get_version.outputs.version }}

      - name: Verify API JAR
        run: |
          echo "Verifying API JAR exists..."
          if [ ! -f "api/build/libs/flux-api-${{ steps.get_version.outputs.version }}.jar" ]; then
            echo "API JAR not found!"
            exit 1
          fi
          echo "API JAR verified: $(ls -lh api/build/libs/flux-api-${{ steps.get_version.outputs.version }}.jar)"

      - name: Prepare API for deployment
        run: |
          cd api
          # Copy JAR to expected location for Dockerfile
          cp build/libs/flux-api-${{ steps.get_version.outputs.version }}.jar build/libs/flux-api.jar
          # Install Node.js dependencies for Wrangler
          npm install

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'api/package-lock.json'

      - name: Deploy to Cloudflare Containers
        run: |
          cd api
          # Deploy using Wrangler
          npx wrangler deploy --env production
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Verify deployment
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30

          # Test health endpoint on Cloudflare
          API_URL="https://fluxzero-cli-api-production.rene7346.workers.dev"
          
          echo "Testing deployed API at: $API_URL"

          # Test health endpoint
          if curl -f "$API_URL/health"; then
            echo "‚úÖ API deployment successful! Health check passed."
            echo "üöÄ API is live at: $API_URL"
          else
            echo "‚ùå API deployment failed! Health check did not pass."
            echo "Note: You may need to update the API_URL in the workflow with your actual worker subdomain"
            exit 1
          fi